"""Add unique constraint to inventory item name per tenant

Revision ID: 70961fc98c88
Revises: 40e14d4a6f83
Create Date: 2025-10-06 22:09:30.264173

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '70961fc98c88'
down_revision: Union[str, None] = '40e14d4a6f83'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('app_config_name_key', 'app_config', type_='unique')
    op.create_unique_constraint('_app_config_name_tenant_uc', 'app_config', ['name', 'tenant_id'])
    op.create_index(op.f('ix_app_config_name'), 'app_config', ['name'], unique=False)
    op.alter_column('composition_usage_history', 'composition_items',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.JSON(),
               existing_nullable=False)
    op.create_unique_constraint('_inventory_items_name_tenant_uc', 'inventory_items', ['name', 'tenant_id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('_inventory_items_name_tenant_uc', 'inventory_items', type_='unique')
    op.alter_column('composition_usage_history', 'composition_items',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=False)
    op.drop_index(op.f('ix_app_config_name'), table_name='app_config')
    op.drop_constraint('_app_config_name_tenant_uc', 'app_config', type_='unique')
    op.create_unique_constraint('app_config_name_key', 'app_config', ['name'])
    # ### end Alembic commands ###
