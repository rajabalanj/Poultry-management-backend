"""Change record_id to String in AuditLog

Revision ID: d0644a1a6486
Revises: 5e4138b12517
Create Date: 2025-10-12 23:35:49.186189

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'd0644a1a6486'
down_revision: Union[str, None] = '5e4138b12517'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('app_config', sa.Column('created_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('app_config', sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('app_config', sa.Column('created_by', sa.String(), nullable=True))
    op.add_column('app_config', sa.Column('updated_by', sa.String(), nullable=True))
    op.add_column('app_config', sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('app_config', sa.Column('deleted_by', sa.String(), nullable=True))
    op.alter_column('audit_log', 'record_id',
               existing_type=sa.INTEGER(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('audit_log', 'changed_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.add_column('batch', sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('batch', sa.Column('deleted_by', sa.String(), nullable=True))
    op.alter_column('batch', 'date',
               existing_type=sa.DATE(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.alter_column('batch', 'closing_date',
               existing_type=sa.DATE(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.alter_column('batch', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('batch', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.add_column('bovanswhitelayerperformance', sa.Column('created_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('bovanswhitelayerperformance', sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('bovanswhitelayerperformance', sa.Column('created_by', sa.String(), nullable=True))
    op.add_column('bovanswhitelayerperformance', sa.Column('updated_by', sa.String(), nullable=True))
    op.add_column('bovanswhitelayerperformance', sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('bovanswhitelayerperformance', sa.Column('deleted_by', sa.String(), nullable=True))
    op.add_column('business_partners', sa.Column('created_by', sa.String(), nullable=True))
    op.add_column('business_partners', sa.Column('updated_by', sa.String(), nullable=True))
    op.add_column('business_partners', sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('business_partners', sa.Column('deleted_by', sa.String(), nullable=True))
    op.alter_column('business_partners', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('business_partners', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.add_column('composition', sa.Column('created_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('composition', sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('composition', sa.Column('created_by', sa.String(), nullable=True))
    op.add_column('composition', sa.Column('updated_by', sa.String(), nullable=True))
    op.add_column('composition', sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('composition', sa.Column('deleted_by', sa.String(), nullable=True))
    op.alter_column('composition_usage_history', 'used_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.add_column('daily_batch', sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('daily_batch', sa.Column('deleted_by', sa.String(), nullable=True))
    op.alter_column('daily_batch', 'upload_date',
               existing_type=sa.DATE(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.alter_column('daily_batch', 'batch_date',
               existing_type=sa.DATE(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
    op.alter_column('daily_batch', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('daily_batch', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.add_column('egg_room_reports', sa.Column('created_by', sa.String(), nullable=True))
    op.add_column('egg_room_reports', sa.Column('updated_by', sa.String(), nullable=True))
    op.add_column('egg_room_reports', sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('egg_room_reports', sa.Column('deleted_by', sa.String(), nullable=True))
    op.alter_column('egg_room_reports', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('egg_room_reports', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('inventory_item_audit', 'timestamp',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.alter_column('inventory_item_usage_history', 'used_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.add_column('inventory_items', sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('inventory_items', sa.Column('deleted_by', sa.String(), nullable=True))
    op.alter_column('inventory_items', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('inventory_items', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.add_column('operational_expenses', sa.Column('created_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('operational_expenses', sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('operational_expenses', sa.Column('created_by', sa.String(), nullable=True))
    op.add_column('operational_expenses', sa.Column('updated_by', sa.String(), nullable=True))
    op.add_column('operational_expenses', sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('operational_expenses', sa.Column('deleted_by', sa.String(), nullable=True))
    op.alter_column('operational_expenses', 'date',
               existing_type=sa.DATE(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
    op.add_column('payments', sa.Column('created_by', sa.String(), nullable=True))
    op.add_column('payments', sa.Column('updated_by', sa.String(), nullable=True))
    op.add_column('payments', sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('payments', sa.Column('deleted_by', sa.String(), nullable=True))
    op.alter_column('payments', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('payments', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.add_column('purchase_orders', sa.Column('updated_by', sa.String(), nullable=True))
    op.add_column('purchase_orders', sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('purchase_orders', sa.Column('deleted_by', sa.String(), nullable=True))
    op.alter_column('purchase_orders', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('purchase_orders', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.add_column('sales_orders', sa.Column('updated_by', sa.String(), nullable=True))
    op.add_column('sales_orders', sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('sales_orders', sa.Column('deleted_by', sa.String(), nullable=True))
    op.alter_column('sales_orders', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('sales_orders', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.add_column('sales_payments', sa.Column('created_by', sa.String(), nullable=True))
    op.add_column('sales_payments', sa.Column('updated_by', sa.String(), nullable=True))
    op.add_column('sales_payments', sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('sales_payments', sa.Column('deleted_by', sa.String(), nullable=True))
    op.alter_column('sales_payments', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('sales_payments', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('sales_payments', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('sales_payments', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_column('sales_payments', 'deleted_by')
    op.drop_column('sales_payments', 'deleted_at')
    op.drop_column('sales_payments', 'updated_by')
    op.drop_column('sales_payments', 'created_by')
    op.alter_column('sales_orders', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('sales_orders', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_column('sales_orders', 'deleted_by')
    op.drop_column('sales_orders', 'deleted_at')
    op.drop_column('sales_orders', 'updated_by')
    op.alter_column('purchase_orders', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('purchase_orders', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_column('purchase_orders', 'deleted_by')
    op.drop_column('purchase_orders', 'deleted_at')
    op.drop_column('purchase_orders', 'updated_by')
    op.alter_column('payments', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('payments', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_column('payments', 'deleted_by')
    op.drop_column('payments', 'deleted_at')
    op.drop_column('payments', 'updated_by')
    op.drop_column('payments', 'created_by')
    op.alter_column('operational_expenses', 'date',
               existing_type=sa.DateTime(timezone=True),
               type_=sa.DATE(),
               existing_nullable=False)
    op.drop_column('operational_expenses', 'deleted_by')
    op.drop_column('operational_expenses', 'deleted_at')
    op.drop_column('operational_expenses', 'updated_by')
    op.drop_column('operational_expenses', 'created_by')
    op.drop_column('operational_expenses', 'updated_at')
    op.drop_column('operational_expenses', 'created_at')
    op.alter_column('inventory_items', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('inventory_items', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_column('inventory_items', 'deleted_by')
    op.drop_column('inventory_items', 'deleted_at')
    op.alter_column('inventory_item_usage_history', 'used_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('inventory_item_audit', 'timestamp',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('egg_room_reports', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('egg_room_reports', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_column('egg_room_reports', 'deleted_by')
    op.drop_column('egg_room_reports', 'deleted_at')
    op.drop_column('egg_room_reports', 'updated_by')
    op.drop_column('egg_room_reports', 'created_by')
    op.alter_column('daily_batch', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('daily_batch', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('daily_batch', 'batch_date',
               existing_type=sa.DateTime(timezone=True),
               type_=sa.DATE(),
               existing_nullable=False)
    op.alter_column('daily_batch', 'upload_date',
               existing_type=sa.DateTime(timezone=True),
               type_=sa.DATE(),
               existing_nullable=True)
    op.drop_column('daily_batch', 'deleted_by')
    op.drop_column('daily_batch', 'deleted_at')
    op.alter_column('composition_usage_history', 'used_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.drop_column('composition', 'deleted_by')
    op.drop_column('composition', 'deleted_at')
    op.drop_column('composition', 'updated_by')
    op.drop_column('composition', 'created_by')
    op.drop_column('composition', 'updated_at')
    op.drop_column('composition', 'created_at')
    op.alter_column('business_partners', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('business_partners', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_column('business_partners', 'deleted_by')
    op.drop_column('business_partners', 'deleted_at')
    op.drop_column('business_partners', 'updated_by')
    op.drop_column('business_partners', 'created_by')
    op.drop_column('bovanswhitelayerperformance', 'deleted_by')
    op.drop_column('bovanswhitelayerperformance', 'deleted_at')
    op.drop_column('bovanswhitelayerperformance', 'updated_by')
    op.drop_column('bovanswhitelayerperformance', 'created_by')
    op.drop_column('bovanswhitelayerperformance', 'updated_at')
    op.drop_column('bovanswhitelayerperformance', 'created_at')
    op.alter_column('batch', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('batch', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('batch', 'closing_date',
               existing_type=sa.DateTime(timezone=True),
               type_=sa.DATE(),
               existing_nullable=True)
    op.alter_column('batch', 'date',
               existing_type=sa.DateTime(timezone=True),
               type_=sa.DATE(),
               existing_nullable=True)
    op.drop_column('batch', 'deleted_by')
    op.drop_column('batch', 'deleted_at')
    op.alter_column('audit_log', 'changed_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('audit_log', 'record_id',
               existing_type=sa.String(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.drop_column('app_config', 'deleted_by')
    op.drop_column('app_config', 'deleted_at')
    op.drop_column('app_config', 'updated_by')
    op.drop_column('app_config', 'created_by')
    op.drop_column('app_config', 'updated_at')
    op.drop_column('app_config', 'created_at')
    # ### end Alembic commands ###
