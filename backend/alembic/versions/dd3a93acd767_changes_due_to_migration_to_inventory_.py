"""changes due to migration to inventory items from medicine and feed table

Revision ID: dd3a93acd767
Revises: b73ec7a879e8
Create Date: 2025-09-09 11:16:24.741725

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'dd3a93acd767'
down_revision: Union[str, None] = 'b73ec7a879e8'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_medicine_audit_id', table_name='medicine_audit')
    op.drop_table('medicine_audit')
    op.drop_index('ix_medicine_usage_history_id', table_name='medicine_usage_history')
    op.drop_table('medicine_usage_history')
    op.drop_index('ix_medicine_id', table_name='medicine')
    op.drop_table('medicine')
    op.drop_index('ix_feed_in_composition_id', table_name='feed_in_composition')
    op.drop_table('feed_in_composition')
    op.drop_index('ix_feed_audit_id', table_name='feed_audit')
    op.drop_table('feed_audit')
    op.drop_index('ix_feed_id', table_name='feed')
    op.drop_table('feed')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('medicine_usage_history',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('medicine_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('used_quantity_grams', sa.NUMERIC(precision=10, scale=3), autoincrement=False, nullable=False),
    sa.Column('used_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('batch_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('changed_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['batch_id'], ['batch.id'], name='medicine_usage_history_batch_id_fkey'),
    sa.ForeignKeyConstraint(['medicine_id'], ['medicine.id'], name='medicine_usage_history_medicine_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='medicine_usage_history_pkey')
    )
    op.create_index('ix_medicine_usage_history_id', 'medicine_usage_history', ['id'], unique=False)
    op.create_table('feed',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('feed_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('quantity', sa.NUMERIC(precision=8, scale=3), autoincrement=False, nullable=True),
    sa.Column('unit', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('createdDate', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('warningKgThreshold', sa.NUMERIC(precision=10, scale=3), autoincrement=False, nullable=True),
    sa.Column('warningTonThreshold', sa.NUMERIC(precision=10, scale=3), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='feed_pkey'),
    sa.UniqueConstraint('title', name='feed_title_key'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_feed_id', 'feed', ['id'], unique=False)
    op.create_table('feed_audit',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('feed_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('change_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('change_amount', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('old_weight', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('new_weight', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('changed_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('note', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['feed_id'], ['feed.id'], name='feed_audit_feed_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='feed_audit_pkey')
    )
    op.create_index('ix_feed_audit_id', 'feed_audit', ['id'], unique=False)
    op.create_table('inventory_item_audit',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('inventory_item_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('change_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('change_amount', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('old_quantity', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('new_quantity', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('changed_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('note', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['inventory_item_id'], ['inventory_items.id'], name='inventory_item_audit_inventory_item_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='inventory_item_audit_pkey')
    )
    op.create_index('ix_inventory_item_audit_id', 'inventory_item_audit', ['id'], unique=False)
    op.create_table('feed_in_composition',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('composition_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('feed_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('weight', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['composition_id'], ['composition.id'], name='feed_in_composition_composition_id_fkey'),
    sa.ForeignKeyConstraint(['feed_id'], ['feed.id'], name='feed_in_composition_feed_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='feed_in_composition_pkey')
    )
    op.create_index('ix_feed_in_composition_id', 'feed_in_composition', ['id'], unique=False)
    op.create_table('inventory_item_in_composition',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('composition_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('inventory_item_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('weight', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['composition_id'], ['composition.id'], name='inventory_item_in_composition_composition_id_fkey'),
    sa.ForeignKeyConstraint(['inventory_item_id'], ['inventory_items.id'], name='inventory_item_in_composition_inventory_item_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='inventory_item_in_composition_pkey')
    )
    op.create_index('ix_inventory_item_in_composition_id', 'inventory_item_in_composition', ['id'], unique=False)
    op.create_table('medicine_audit',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('medicine_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('change_amount', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('old_weight', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('new_weight', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('changed_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('note', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['medicine_id'], ['medicine.id'], name='medicine_audit_medicine_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='medicine_audit_pkey')
    )
    op.create_index('ix_medicine_audit_id', 'medicine_audit', ['id'], unique=False)
    op.create_table('medicine',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('quantity', sa.NUMERIC(precision=8, scale=3), autoincrement=False, nullable=True),
    sa.Column('unit', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('createdDate', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('warningGramThreshold', sa.NUMERIC(precision=10, scale=3), autoincrement=False, nullable=True),
    sa.Column('warningKGThreshold', sa.NUMERIC(precision=10, scale=3), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='medicine_pkey'),
    sa.UniqueConstraint('title', name='medicine_title_key')
    )
    op.create_index('ix_medicine_id', 'medicine', ['id'], unique=False)
    # ### end Alembic commands ###
